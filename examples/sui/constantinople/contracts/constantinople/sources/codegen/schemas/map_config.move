  // Copyright (c) Obelisk Labs, Inc.
  // SPDX-License-Identifier: Apache-2.0
  #[allow(unused_use)]
  
  /* Autogenerated file. Do not edit manually. */
  
  module constantinople::map_config {

  use std::ascii::String;

  use constantinople::map_direction::Direction;

  use constantinople::map_terrain_type::TerrainType;

  public struct Config has copy, drop, store {
    width: u64,
    height: u64,
    terrain: vector<vector<TerrainType>>,
  }

  public fun new(width: u64, height: u64, terrain: vector<vector<TerrainType>>): Config {
    Config {
                                   width,height,terrain
                               }
  }

  public fun get(self: &Config): (u64,u64,vector<vector<TerrainType>>) {
    (self.width,self.height,self.terrain)
  }

  public fun get_width(self: &Config): u64 {
    self.width
  }

  public fun get_height(self: &Config): u64 {
    self.height
  }

  public fun get_terrain(self: &Config): vector<vector<TerrainType>> {
    self.terrain
  }

  public(package) fun set_width(self: &mut Config, width: u64) {
    self.width = width;
  }

  public(package) fun set_height(self: &mut Config, height: u64) {
    self.height = height;
  }

  public(package) fun set_terrain(self: &mut Config, terrain: vector<vector<TerrainType>>) {
    self.terrain = terrain;
  }

  public(package) fun set(self: &mut Config, width: u64, height: u64, terrain: vector<vector<TerrainType>>) {
    self.width = width;
    self.height = height;
    self.terrain = terrain;
  }
}
